[tool.poetry]
name = "aoc-cj"
version = "0.1.0"
description = "cj81499's solutions for https://adventofcode.com/"
authors = ["Cal Jacobson <cj81499@users.noreply.github.com>"]
homepage = "https://github.com/cj81499/advent-of-code"

[tool.poetry.dependencies]
python = ">=3.9"
advent-of-code-data = "^2.0.1"
more-itertools = "^10.0.0"
numpy = "^1.26.2" # TODO: remove me
z3-solver = "^4.12.4"
lark = "^1.1.8"
networkx = "^3.2.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
mypy = "^1.8"
ruff = "^0.1.9"
types-networkx = "^3.1.0.20231220"

[tool.poetry.plugins."adventofcode.user"]
cj81499 = "aoc_cj:solve"

[tool.coverage.run]
branch = true
parallel = true
omit = []

[tool.coverage.report]
exclude_also = [
  'if __name__ == "__main__":',
  'if TYPE_CHECKING:',
  'raise NotImplementedError',
  '@abc\.abstractmethod',
  'assert False',
  'assert_never\(.*\)',
]

[tool.ruff]
line-length = 120
target-version = "py38" # FIXME: replace w/ project.requires-python - https://docs.astral.sh/ruff/settings/#target-version
output-format = "grouped"
src = [
  "src",
  # "test",
]

[tool.ruff.lint]
select = [ # https://docs.astral.sh/ruff/rules/ # TODO: enable additional linter rules
  # "F", # Pyflakes
  "F401", # unused-import
  # "E", # pycodestyle
  # "W", # pycodestyle
  "I", # isort
  "UP", # pyupgrade
  # TODO: evaluate flake8 rules
  "ERA",
  # "PL", # pylint
  # "FURB", #refurb
  "RUF", # ruff

  # "PL", # pylint # FIXME: duplicate. delete this line
]
ignore = [
  "E741", # allow ambiguous-variable-name (eg: l, I, O)
  "B011",
  "B019",
]

# [tool.ruff.format]
# indent-style = "tab" # FIXME: use tabs instead of spaces

# [tool.ruff.lint.per-file-ignores]
# "src/aoc_cj/aoc20{15,16,17,18,19,20,21,22}/*" = ["ALL"]

# [tool.ruff.lint.isort]
# required-imports = ["from __future__ import annotations"]

[tool.pytest.ini_options]
# skip slow tests by default
addopts = "-m 'not slow'"
markers = [
  "slow: marks tests as slow",
]
xfail_strict = true

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html

# Opt out of type checking old years
# TODO: type check tests too
exclude = [
  '^tests\/aoc2015\/',
  '^src\/aoc_cj\/aoc2015\/',
  '^tests\/aoc2016\/',
  '^src\/aoc_cj\/aoc2016\/',
  '^tests\/aoc2017\/',
  '^src\/aoc_cj\/aoc2017\/',
  '^tests\/aoc2018\/',
  '^src\/aoc_cj\/aoc2018\/',
  '^tests\/aoc2019\/',
  '^src\/aoc_cj\/aoc2019\/',
  '^tests\/aoc2020\/',
  '^src\/aoc_cj\/aoc2020\/',
  '^tests\/aoc2021\/',
  '^src\/aoc_cj\/aoc2020\/',
]

strict = true

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true

# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = true
enable_error_code = [ # https://mypy.readthedocs.io/en/stable/error_code_list2.html#error-codes-optional
  'redundant-self',
  'redundant-expr',
  'possibly-undefined',
  'truthy-bool',
  'truthy-iterable',
  'ignore-without-code',
  'unused-awaitable',
  'unused-ignore',
  'explicit-override',
  'unimported-reveal',
]
implicit_reexport = true
strict_equality = true

# Configuring error messages
show_column_numbers = true
pretty = true

# Miscellaneous
warn_unused_configs = true

[[tool.mypy.overrides]]
# aocd doesn't provide types https://github.com/wimglenn/advent-of-code-data/issues/78
module = ['aocd']
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
