{
  // Place your advent-of-code-cj workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Advent of Code Day": {
    "scope": "python",
    "description": "Scaffold Advent of Code Day",
    "prefix": "aoc-day",
    "body": [
      "import itertools",
      "import re",
      "from collections import Counter, defaultdict, deque",
      "",
      "",
      "def parta(txt: str) -> None:",
      "    $0print(txt)",
      "    return None",
      "",
      "",
      "def partb(txt: str) -> None:",
      "    return None",
      "",
      "",
      "def main(txt: str) -> None:",
      "    print(f\"parta: {parta(txt)}\")",
      "    print(f\"partb: {partb(txt)}\")",
      "",
      "",
      "if __name__ == \"__main__\":",
      "    from aocd import data",
      "",
      "    main(data)"
    ]
  },
  "Advent of Code Test": {
    "scope": "python",
    "description": "Scaffold Advent of Code Test",
    "prefix": "aoc-test",
    "body": [
      "import aoc_cj.aoc20${2:22}.day${1:n} as d",
      "",
      "EXAMPLE_INPUT = \"\"\"",
      "${3:sample input}",
      "\"\"\".strip()",
      "",
      "",
      "def test_a() -> None:",
      "    assert d.parta(EXAMPLE_INPUT) is ${4:None}",
      "",
      "",
      "def test_b() -> None:",
      "    assert d.partb(EXAMPLE_INPUT) is ${5:None}"
    ]
  }
}
